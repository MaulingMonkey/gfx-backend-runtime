# The shaderc dependencies are already installed on the `xenial` base image so
# we don't need to worry about installing them.

dist: xenial

os:
  - linux
  - osx
  #- windows takes too long with TravisCI, we rely on AppVeyor for this

language: rust

rust:
  - stable

cache:
  cargo

branches:
  only:
    - staging
    - trying
    - master

matrix:
  fast_finish: true
  allow_failures:
    # Can't compile spirv_cross for WASM currently... maybe via emscripten?  Needs more C++ headers...
    # "src/vendor/SPIRV-Cross/spirv_common.hpp:22:10: fatal error: 'algorithm' file not found"
    - env: TARGET=wasm32-unknown-unknown
    - env: TARGET=wasm32-wasi

    # X11 2.18.1 doesn't like to cross compile for *-unknown-linux-gnueabihf
    # "thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: CrossCompilation', src/libcore/result.rs:999:5"
    - env: TARGET=arm-unknown-linux-gnueabihf
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=thumbv7neon-unknown-linux-gnueabihf

    # Some versions of OS X can't target metal in the simulator.  See https://stackoverflow.com/a/56496197
    # "xcrun: error: unable to find utility "metal", not a developer tool or in PATH"
    # "thread 'main' panicked at 'shader compilation failed', /Users/travis/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-backend-metal-0.2.3/build.rs:69:13"
    - env: TARGET=x86_64-apple-ios FLAGS="--features simulator-metal"

  include:
    - { os: linux, rust: stable,  env: CLIPPY=true }

    - { os: linux, rust: stable,  env: FLAGS=--release }
    - { os: osx,   rust: stable,  env: FLAGS=--release }

    #- { os: linux, rust: stable,  env: TARGET=wasm32-unknown-unknown }
    #- { os: linux, rust: stable,  env: TARGET=wasm32-wasi }
    - { os: linux, rust: stable,  env: TARGET=aarch64-linux-android }
    - { os: linux, rust: stable,  env: TARGET=armv7-linux-androideabi }
    - { os: linux, rust: stable,  env: TARGET=i686-linux-android }
    - { os: linux, rust: stable,  env: TARGET=x86_64-linux-android }
    #- { os: linux, rust: stable,  env: TARGET=arm-unknown-linux-gnueabihf }
    #- { os: linux, rust: stable,  env: TARGET=armv7-unknown-linux-gnueabihf }
    #- { os: linux, rust: stable,  env: TARGET=thumbv7neon-unknown-linux-gnueabihf }

    - { os: osx,   rust: stable,  env: TARGET=aarch64-apple-ios }
    - { os: osx,   rust: stable,  env: TARGET=armv7-apple-ios }
    - { os: osx,   rust: stable,  env: TARGET=armv7s-apple-ios }
    - { os: osx,   rust: stable,  env: TARGET=i386-apple-ios }
    - { os: osx,   rust: stable,  env: TARGET=x86_64-apple-ios }
    #- { os: osx,   rust: stable,  env: TARGET=x86_64-apple-ios FLAGS="--features simulator-metal" }

script:
  - pushd scripts
  - chmod +x ./travis.sh
  - ./travis.sh
  - popd

# Configured so we cache cargo-web for WASM unit testing, otherwise it takes forever (13+ minutes) to compile.
# See also https://levans.fr/rust_travis_cache.html
cache:
  directories:
    - $TRAVIS_HOME/.cargo/
    - $TRAVIS_HOME/.rustup/
before_cache:
  - rm -rf "$TRAVIS_HOME/.cargo/registry/src"
